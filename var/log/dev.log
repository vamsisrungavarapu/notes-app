[2022-07-14T12:41:47.855097+00:00] request.INFO: Matched route "display_home". {"route":"display_home","route_parameters":{"_route":"display_home","_controller":"App\\Controller\\NoteController::showAll"},"request_uri":"http://localhost:8095/","method":"GET"} []
[2022-07-14T12:41:47.874168+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-14T12:41:48.346631+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"}} []
[2022-07-14T12:41:48.458625+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0 {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0"} []
[2022-07-14T12:41:48.623792+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-14T12:41:48.664909+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":2},"types":{"1":1}} []
[2022-07-14T12:41:48.667643+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":3},"types":{"1":1}} []
[2022-07-14T12:41:48.675649+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0"} []
[2022-07-14T12:41:49.614484+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:41:49.702851+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-07-14T12:41:49.713139+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-07-14T12:41:49.716659+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:41:49.767610+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:41:49.771550+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-07-14T12:41:49.842072+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:41:49.843992+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-07-14T12:41:49.851039+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:41:49.852867+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-07-14T12:41:49.858467+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-07-14T12:41:49.860541+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-07-14T12:41:49.877402+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-14T12:41:49.930404+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:41:51.046053+00:00] doctrine.INFO: Disconnecting [] []
[2022-07-14T12:41:54.273152+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"be6cc6"},"request_uri":"http://localhost:8095/_wdt/be6cc6","method":"GET"} []
[2022-07-14T12:42:41.849453+00:00] request.INFO: Matched route "display_home". {"route":"display_home","route_parameters":{"_route":"display_home","_controller":"App\\Controller\\NoteController::showAll"},"request_uri":"http://localhost:8095/","method":"GET"} []
[2022-07-14T12:42:41.903725+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-14T12:42:42.433734+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"}} []
[2022-07-14T12:42:42.466974+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0 {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0"} []
[2022-07-14T12:42:42.524967+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-14T12:42:42.531257+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":2},"types":{"1":1}} []
[2022-07-14T12:42:42.533394+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":3},"types":{"1":1}} []
[2022-07-14T12:42:42.539105+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0"} []
[2022-07-14T12:42:42.707265+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:42:42.715410+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-07-14T12:42:42.717823+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-07-14T12:42:42.719479+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:42:42.755866+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:42:42.758119+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-07-14T12:42:42.776039+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:42:42.792199+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-07-14T12:42:42.798512+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:42:42.800230+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-07-14T12:42:42.804971+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-07-14T12:42:42.807672+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-07-14T12:42:42.823686+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-14T12:42:42.855097+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:42:43.093637+00:00] doctrine.INFO: Disconnecting [] []
[2022-07-14T12:42:44.617037+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d22124"},"request_uri":"http://localhost:8095/_wdt/d22124","method":"GET"} []
[2022-07-14T12:43:04.277467+00:00] request.INFO: Matched route "display_home". {"route":"display_home","route_parameters":{"_route":"display_home","_controller":"App\\Controller\\NoteController::showAll"},"request_uri":"http://localhost:8095/","method":"GET"} []
[2022-07-14T12:43:04.320575+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-14T12:43:04.649151+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"}} []
[2022-07-14T12:43:04.673077+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0 {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0"} []
[2022-07-14T12:43:04.716882+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-14T12:43:04.727340+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":2},"types":{"1":1}} []
[2022-07-14T12:43:04.729261+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":3},"types":{"1":1}} []
[2022-07-14T12:43:04.733915+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0"} []
[2022-07-14T12:43:04.894930+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:43:04.905798+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-07-14T12:43:04.907580+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-07-14T12:43:04.908724+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:43:04.928655+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:43:04.930252+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-07-14T12:43:04.946689+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:43:04.948421+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-07-14T12:43:04.951278+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:43:04.952971+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-07-14T12:43:04.957010+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-07-14T12:43:04.958932+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-07-14T12:43:04.966504+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-14T12:43:04.981776+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:43:05.188118+00:00] doctrine.INFO: Disconnecting [] []
[2022-07-14T12:43:06.508813+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ee2ba1"},"request_uri":"http://localhost:8095/_wdt/ee2ba1","method":"GET"} []
[2022-07-14T12:43:29.277100+00:00] request.INFO: Matched route "display_home". {"route":"display_home","route_parameters":{"_route":"display_home","_controller":"App\\Controller\\NoteController::showAll"},"request_uri":"http://localhost:8095/","method":"GET"} []
[2022-07-14T12:43:29.350802+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-14T12:43:29.828788+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"}} []
[2022-07-14T12:43:29.852940+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0 {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0"} []
[2022-07-14T12:43:29.903666+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-14T12:43:29.911395+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":2},"types":{"1":1}} []
[2022-07-14T12:43:29.915903+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":3},"types":{"1":1}} []
[2022-07-14T12:43:29.919714+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0"} []
[2022-07-14T12:43:30.142342+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:43:30.149900+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-07-14T12:43:30.151764+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-07-14T12:43:30.153210+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:43:30.176221+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:43:30.177937+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-07-14T12:43:30.190748+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:43:30.192418+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-07-14T12:43:30.195618+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:43:30.197176+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-07-14T12:43:30.200223+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-07-14T12:43:30.202419+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-07-14T12:43:30.211056+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-14T12:43:30.227861+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:43:30.455066+00:00] doctrine.INFO: Disconnecting [] []
[2022-07-14T12:43:32.035161+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"28f1d9"},"request_uri":"http://localhost:8095/_wdt/28f1d9","method":"GET"} []
[2022-07-14T12:43:34.037234+00:00] request.INFO: Matched route "display_home". {"route":"display_home","route_parameters":{"_route":"display_home","_controller":"App\\Controller\\NoteController::showAll"},"request_uri":"http://localhost:8095/","method":"GET"} []
[2022-07-14T12:43:34.092894+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-14T12:43:34.496810+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"}} []
[2022-07-14T12:43:34.519982+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0 {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0"} []
[2022-07-14T12:43:34.570176+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-14T12:43:34.575302+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":2},"types":{"1":1}} []
[2022-07-14T12:43:34.577612+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":3},"types":{"1":1}} []
[2022-07-14T12:43:34.581794+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0"} []
[2022-07-14T12:43:34.714997+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:43:34.720481+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-07-14T12:43:34.723288+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-07-14T12:43:34.724771+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:43:34.741855+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:43:34.743299+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-07-14T12:43:34.754033+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:43:34.755684+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-07-14T12:43:34.758313+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:43:34.759776+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-07-14T12:43:34.762296+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-07-14T12:43:34.764095+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-07-14T12:43:34.770282+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-14T12:43:34.785712+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:43:34.967589+00:00] doctrine.INFO: Disconnecting [] []
[2022-07-14T12:43:36.114059+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"113ce5"},"request_uri":"http://localhost:8095/_wdt/113ce5","method":"GET"} []
[2022-07-14T12:43:56.234366+00:00] request.INFO: Matched route "display_home". {"route":"display_home","route_parameters":{"_route":"display_home","_controller":"App\\Controller\\NoteController::showAll"},"request_uri":"http://localhost:8095/","method":"GET"} []
[2022-07-14T12:43:56.287625+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-14T12:43:56.609648+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"}} []
[2022-07-14T12:43:56.642022+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0 {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0"} []
[2022-07-14T12:43:56.704755+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-14T12:43:56.710676+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":2},"types":{"1":1}} []
[2022-07-14T12:43:56.712588+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":3},"types":{"1":1}} []
[2022-07-14T12:43:56.716466+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0"} []
[2022-07-14T12:43:57.000725+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:43:57.007965+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-07-14T12:43:57.010331+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-07-14T12:43:57.013204+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:43:57.046848+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:43:57.048936+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-07-14T12:43:57.067510+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:43:57.070032+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-07-14T12:43:57.074666+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:43:57.077410+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-07-14T12:43:57.080950+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-07-14T12:43:57.083880+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-07-14T12:43:57.095684+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-14T12:43:57.126874+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:43:57.418110+00:00] doctrine.INFO: Disconnecting [] []
[2022-07-14T12:43:58.867533+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8bfed8"},"request_uri":"http://localhost:8095/_wdt/8bfed8","method":"GET"} []
[2022-07-14T12:44:09.078483+00:00] request.INFO: Matched route "display_home". {"route":"display_home","route_parameters":{"_route":"display_home","_controller":"App\\Controller\\NoteController::showAll"},"request_uri":"http://localhost:8095/","method":"GET"} []
[2022-07-14T12:44:09.144279+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-14T12:44:09.543847+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"}} []
[2022-07-14T12:44:09.572352+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0 {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0"} []
[2022-07-14T12:44:09.616656+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-14T12:44:09.624456+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":2},"types":{"1":1}} []
[2022-07-14T12:44:09.626952+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":3},"types":{"1":1}} []
[2022-07-14T12:44:09.630794+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0"} []
[2022-07-14T12:44:09.802526+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:44:09.811230+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-07-14T12:44:09.813671+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-07-14T12:44:09.814839+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:44:09.839201+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:44:09.870387+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-07-14T12:44:09.889066+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:44:09.890733+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-07-14T12:44:09.893144+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:44:09.894616+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-07-14T12:44:09.898085+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-07-14T12:44:09.900062+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-07-14T12:44:09.908095+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-14T12:44:09.923335+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:44:10.139553+00:00] doctrine.INFO: Disconnecting [] []
[2022-07-14T12:44:11.546798+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"88dadd"},"request_uri":"http://localhost:8095/_wdt/88dadd","method":"GET"} []
[2022-07-14T12:44:16.720159+00:00] request.INFO: Matched route "display_home". {"route":"display_home","route_parameters":{"_route":"display_home","_controller":"App\\Controller\\NoteController::showAll"},"request_uri":"http://localhost:8095/","method":"GET"} []
[2022-07-14T12:44:16.760328+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-14T12:44:17.069594+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"}} []
[2022-07-14T12:44:17.087614+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0 {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0"} []
[2022-07-14T12:44:17.124130+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-14T12:44:17.129122+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":2},"types":{"1":1}} []
[2022-07-14T12:44:17.130875+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":3},"types":{"1":1}} []
[2022-07-14T12:44:17.134964+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0"} []
[2022-07-14T12:44:17.266334+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:44:17.272526+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-07-14T12:44:17.274418+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-07-14T12:44:17.275878+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:44:17.291850+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:44:17.293128+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-07-14T12:44:17.304058+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:44:17.305547+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-07-14T12:44:17.307302+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:44:17.308484+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-07-14T12:44:17.311317+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-07-14T12:44:17.313178+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-07-14T12:44:17.319900+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-14T12:44:17.333922+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:44:17.511265+00:00] doctrine.INFO: Disconnecting [] []
[2022-07-14T12:44:18.606693+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"df50f3"},"request_uri":"http://localhost:8095/_wdt/df50f3","method":"GET"} []
[2022-07-14T12:45:19.065811+00:00] request.INFO: Matched route "display_home". {"route":"display_home","route_parameters":{"_route":"display_home","_controller":"App\\Controller\\NoteController::showAll"},"request_uri":"http://localhost:8095/","method":"GET"} []
[2022-07-14T12:45:19.106250+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-14T12:45:19.480031+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"}} []
[2022-07-14T12:45:19.505179+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0 {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0"} []
[2022-07-14T12:45:19.563162+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-14T12:45:19.569474+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":2},"types":{"1":1}} []
[2022-07-14T12:45:19.571542+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":3},"types":{"1":1}} []
[2022-07-14T12:45:19.577440+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0"} []
[2022-07-14T12:45:19.741963+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:45:19.748803+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-07-14T12:45:19.751712+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-07-14T12:45:19.753628+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:45:19.779487+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:45:19.781604+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-07-14T12:45:19.797532+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:45:19.799139+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-07-14T12:45:19.804367+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:45:19.806523+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-07-14T12:45:19.809801+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-07-14T12:45:19.812025+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-07-14T12:45:19.820701+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-14T12:45:19.839704+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:45:20.114757+00:00] doctrine.INFO: Disconnecting [] []
[2022-07-14T12:45:21.813396+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a35cef"},"request_uri":"http://localhost:8095/_wdt/a35cef","method":"GET"} []
[2022-07-14T12:45:57.067267+00:00] request.INFO: Matched route "display_home". {"route":"display_home","route_parameters":{"_route":"display_home","_controller":"App\\Controller\\NoteController::showAll"},"request_uri":"http://localhost:8095/","method":"GET"} []
[2022-07-14T12:45:57.129410+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-14T12:45:57.638396+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"}} []
[2022-07-14T12:45:57.696319+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0 {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0"} []
[2022-07-14T12:45:57.762829+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-14T12:45:57.776415+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":2},"types":{"1":1}} []
[2022-07-14T12:45:57.779017+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":3},"types":{"1":1}} []
[2022-07-14T12:45:57.784176+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0"} []
[2022-07-14T12:45:58.021287+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:45:58.037479+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-07-14T12:45:58.041664+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-07-14T12:45:58.043566+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:45:58.069015+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:45:58.071257+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-07-14T12:45:58.093466+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:45:58.095458+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-07-14T12:45:58.100733+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:45:58.102805+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-07-14T12:45:58.106560+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-07-14T12:45:58.109182+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-07-14T12:45:58.119906+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-14T12:45:58.141645+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:45:58.441924+00:00] doctrine.INFO: Disconnecting [] []
[2022-07-14T12:46:00.975618+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0d1a02"},"request_uri":"http://localhost:8095/_wdt/0d1a02","method":"GET"} []
[2022-07-14T12:46:37.172543+00:00] request.INFO: Matched route "display_home". {"route":"display_home","route_parameters":{"_route":"display_home","_controller":"App\\Controller\\NoteController::showAll"},"request_uri":"http://localhost:8095/","method":"GET"} []
[2022-07-14T12:46:37.234733+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-07-14T12:46:37.764285+00:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"main-db","port":5432,"user":"admin","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"notes-app","serverVersion":"13","charset":"utf8"}} []
[2022-07-14T12:46:37.841380+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0 {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.description AS description_3 FROM note t0"} []
[2022-07-14T12:46:37.906220+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":1}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":1},"types":{"1":1}} []
[2022-07-14T12:46:37.919846+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":2}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":2},"types":{"1":1}} []
[2022-07-14T12:46:37.921997+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 INNER JOIN note_tag ON t0.id = note_tag.tag_id WHERE note_tag.note_id = ?","params":{"1":3},"types":{"1":1}} []
[2022-07-14T12:46:37.928433+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2 FROM tag t0"} []
[2022-07-14T12:46:38.191923+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:46:38.204022+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-07-14T12:46:38.207692+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-07-14T12:46:38.210000+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-07-14T12:46:38.234830+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:46:38.236330+00:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-07-14T12:46:38.251147+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:46:38.252953+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-07-14T12:46:38.255599+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:46:38.257738+00:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-07-14T12:46:38.262817+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16385 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-07-14T12:46:38.266194+00:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-07-14T12:46:38.274975+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-07-14T12:46:38.294661+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-07-14T12:46:38.555794+00:00] doctrine.INFO: Disconnecting [] []
[2022-07-14T12:46:40.699016+00:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b2c55c"},"request_uri":"http://localhost:8095/_wdt/b2c55c","method":"GET"} []
